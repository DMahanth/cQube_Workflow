---
- name: Creates a directory
  file:
    path: nifi_json_files
    owner: "{{ system_user_name }}"
    group: "{{ system_user_name }}"
    mode: '1755'
    state: directory
  tags: [ install , update ]

- name: Creating nifi_queries directory
  file:
    path: "{{ base_dir }}/cqube/nifi/nifi_queries"
    state: directory
  tags: install
    
- name: Copying the query files to nifi directory
  copy: 
    src: ../../development/nifi/reports_queries/{{ item }}
    dest: "{{ base_dir }}/cqube/nifi/nifi_queries/{{ item }}"
    mode: "0644"
  with_items:
    - crc_queries.json
    - student_attendance_queries.json
    - student_assessment_queries.json
    - diksha_summary_rollup_queries_all.json
    - diksha_summary_rollup_queries_less.json
    - diksha_tpd_queries.json
    - composite_queries.json
    - pat_queries.json
    - udise_queries.json
    - health_card_queries.json
    - teacher_attendance_queries.json
    - data_replay_queries.json
    - sat_queries.json
  tags: [ install, update ]

- name: Touch a file
  file:
    path: "{{ base_dir }}/cqube/emission_app/python/nifi_env_db.py"
    state: touch
    mode: u+rw,g+rw,o+rw
  tags: install

- name: Loading required data inside nifi_env_db.py file
  blockinfile:
        path: "{{ base_dir }}/cqube/emission_app/python/nifi_env_db.py"
        block: |
               db_name= "{{ db_name }}"
               db_user= "{{ db_user }}"
               db_pwd= "{{ db_password }}"
               nifi_port= "{{ nifi_port }}" 
  tags: install

- name: Delete existing templates in nifi
  become: yes
  file:
    path: "{{ base_dir }}/cqube/nifi/nifi/conf/flow.xml.gz"
    state: absent
  tags: [ install, update ]

- name: Restart NiFi
  shell: "{{ base_dir }}/cqube/nifi/nifi/bin/nifi.sh restart"
  tags: [ install, update ]

- pause:
    minutes: 3
    prompt: "nifi is restarting, kindly do not press any key"
  tags: [ install, update ]

- name: checking for nifi port, waiting until it starts... 
  wait_for:
    port: "{{ nifi_port }}"
    delay: 15
  tags: [ install, update ]

- name: Get configuration details
  uri:
    url: http://localhost:{{ nifi_port }}/nifi-api/controller/config
    method: GET
  register: nifi_config  
  tags: [ install, update ]
    
- name: Update the NiFi thread count
  uri:
    url: http://localhost:{{ nifi_port }}/nifi-api/controller/config
    method: PUT
    body_format: json
    body: {"revision":{"version":"{{ nifi_config.json.revision.version }}"},"component":{"maxTimerDrivenThreadCount":"10","maxEventDrivenThreadCount":"6"}}
  tags: [ install, update ]

- name: Create the prometheus task
  uri:
    url: http://localhost:{{ nifi_port }}/nifi-api/controller/reporting-tasks
    method: POST
    body_format: json
    status_code: 201
    body: {"revision":{"clientId":"","version":0},"disconnectedNodeAcknowledged":false,"component":{"type":"org.apache.nifi.reporting.prometheus.PrometheusReportingTask","bundle":{"group":"org.apache.nifi","artifact":"nifi-prometheus-nar","version":"1.12.1"}}}
  register: output
  tags: [ install, update ]

- name: Start the prometheus task
  uri:
    url: http://localhost:{{ nifi_port }}/nifi-api/reporting-tasks/{{ output.json.component.id }}
    method: PUT
    body_format: json
    body: '{"component":{"id":"{{ output.json.component.id }}","name":"PrometheusReportingTask","schedulingStrategy":"TIMER_DRIVEN","schedulingPeriod":"30 sec","comments":"","state":"RUNNING","properties":{"prometheus-reporting-task-metrics-send-jvm":"true"}},"revision":{"clientId":"{{ output.json.revision.clientId }}","version":"{{ output.json.revision.version }}"},"disconnectedNodeAcknowledged":false}'
  tags: [ install, update ]  
